def lcs_for(s1,s2,n,m):
    dp=[[None for i in range(0,n+1)] for j in range(0,m+1)]
    print(dp)
    for i in range(m+1):
        for j in range(n+1):
            if(i==0 or j==0):
                dp[i][j]=0
            else:
                if(s1[j-1]==s2[i-1]):
                    dp[i][j]=dp[i-1][j-1]+1
                else:
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1])
    print(dp)
    return dp[m][n]


print(lcs_for("aggtabq", "gxtxaybe",7,8))



#####################################################
def lcs(s1,s2,n,m):
    dp=[[0 for j in range(0,m+1)]for i in range(0,n+1)]
    for i in range(0,n+1):
        for j in range(0,m+1):
            if(i==0 or j==0):
                dp[i][j]=0
            else:
                if(s1[i-1]==s2[j-1]):
                    dp[i][j]=dp[i-1][j-1]+1
                else:
                    dp[i][j]=max(dp[i][j-1],dp[i-1][j])
    print(dp[n][m])

    i=n
    j=m
    lcs=""
    while i>0 and j>0:
        if(s1[i-1]==s2[j-1]):
            lcs=lcs+s1[i-1]
            i=i-1
            j=j-1
        elif(dp[i-1][j]>dp[i][j-1]):
            i=i-1
        else:
            j=j-1
    print(lcs[::-1])

lcs("abcabcaa","acbacba",8,7)
